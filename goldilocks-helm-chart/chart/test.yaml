
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: goldilocks
    release: goldilocks
    heritage: Tiller
    group: goldilocks
  name: goldilocks 
  namespace: my-project 
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  serviceName:  
  selector:
    matchLabels:
      app: goldilocks
      release: goldilocks
      group: goldilocks
  template:
    metadata:
      labels:
        app: goldilocks
        release: goldilocks
        group: goldilocks
    spec:
      volumes:
        - name: goldilocks-data
          persistentVolumeClaim:
             claimName: goldilocks-pvc-volume
#        - name: nfs-volumn
#          persistentVolumeClaim:
#             claimName: nfs-pvc
      containers:
      - name:  goldilocks 
        image: "docker.io/sunjesoft/cluster:20c_1_9"  
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000
#          runAsGroup: 1000
          privileged: true
#          fsGroup: 1000
        env:
          - name: APP_NAME
            value: GOLDILOCKS
          - name: MY_POD_IP
            valueFrom:
             fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - mountPath: /home/sunje/goldilocks_data
          name: goldilocks-data
        ports:
        - containerPort: 22581
          name:  goldilocks  
          protocol: TCP
        - containerPort: 42581
          name: locator
          protocol: UDP
        lifecycle:
            preStop:
              exec:
                command:
                  - /home/sunje/goldilocks_home/drop_member.sh
        livenessProbe:
          exec:
            command:
            - cat
            - /home/sunje/entrypoint.sh
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 9
          timeoutSeconds: 8
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - cat
            - /home/sunje/entrypoint.sh
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources: {}
#        terminationMessagePath: {{ $.Values.groups.terminationMessagePath }} 
#        terminationMessagePolicy: {{ $.Values.groups.terminationMessagePolicy }}  
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30 
#  updateStrategy:

